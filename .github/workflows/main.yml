on:
  push:
    branches:
      - '*'
env:
  REPO_BRANCH: ${{ github.ref }}
  USERNAME: ${{ github.actor }}
  EVENT: ${{ github.event_name }}
  
jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Get repository name
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          echo "Repository Name: $REPO_NAME"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Get branch name
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Branch Name: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Get user email
        run: |
          USER_EMAIL=$(curl -s -H "Authorization: token ${{ secrets.SSH_PRIVATE_KEY }}" "https://api.github.com/users/$USERNAME" | jq -r .email)
          echo "User Email: $USER_EMAIL"
          echo "USER_EMAIL=$USER_EMAIL" >> $GITHUB_ENV

      - name: Check if the branch exist sand create it if not
        run: |

          git clone git@github.com:${USERNAME}/${REPO_NAME}_${BRANCH_NAME}_sync.git ../external-repo
          cd ../external-repo
          
          # Attempt to fetch the branch
          if git fetch origin $BRANCH_NAME; then
            echo "Branch $BRANCH_NAME already exists in $REPO_NAME."
          else
            echo "Branch $BRANCH_NAME does not exist in $REPO_NAME. Creating..."
            # Add commands to create the branch using git
            cd ../${REPO_NAME}
            git remote add ${REPO_NAME} https://github.com/{USERNAME}/${REPO_NAME}_${BRANCH_NAME}_sync
            
            git push ${REPO_NAME} ${BRANCH_NAME}
            echo "Branch $BRANCH_NAME created in $REPO_NAME."
          fi
      
      - name: Checkout mirror repository
        run: |
          echo "${USERNAME}/${REPO_NAME}_${BRANCH_NAME}_sync"
          git clone git@github.com:${USERNAME}/${REPO_NAME}_${BRANCH_NAME}_sync.git
          git fetch --unshallow
          cd ${REPO_NAME}_${BRANCH_NAME}_sync
          git checkout $BRANCH_NAME

